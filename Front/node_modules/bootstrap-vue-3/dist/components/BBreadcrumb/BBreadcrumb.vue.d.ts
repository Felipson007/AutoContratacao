import type { BreadcrumbItemObject } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    items: {
        type: ArrayConstructor;
        required: false;
    };
}, {
    props: any;
    breadcrumb: import("../../composables/useBreadcrumb").UseBreadcrumbI;
    breadcrumbItemObjects: import("vue").ComputedRef<BreadcrumbItemObject[]>;
    BBreadcrumbItem: import("vue").DefineComponent<{
        active: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        ariaCurrent: {
            type: StringConstructor;
            default: string;
        };
        disabled: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        text: {
            type: StringConstructor;
            required: false;
        };
        replace: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        exact: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        activeClass: {
            type: StringConstructor;
            default: string;
        };
        append: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        exactActiveClass: {
            type: StringConstructor;
            default: string;
        };
        href: {
            type: StringConstructor;
        };
        rel: {
            type: StringConstructor;
            default: null;
        };
        routerComponentName: {
            type: StringConstructor;
            default: string;
        };
        target: {
            type: import("vue").PropType<import("../../types/LinkTarget").default>;
            default: string;
        };
        to: {
            type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
            default: null;
        };
    }, {
        props: {};
        liClasses: import("vue").ComputedRef<{
            active: boolean;
        }>;
        computedTag: import("vue").ComputedRef<"span" | import("vue").DefineComponent<{
            active: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            activeClass: {
                type: StringConstructor;
                default: string;
            };
            append: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            disabled: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            event: {
                type: (StringConstructor | ArrayConstructor)[];
                default: string;
            };
            exact: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            exactActiveClass: {
                type: StringConstructor;
                default: string;
            };
            href: {
                type: StringConstructor;
            };
            rel: {
                type: StringConstructor;
                default: null;
            };
            replace: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            routerComponentName: {
                type: StringConstructor;
                default: string;
            };
            routerTag: {
                type: StringConstructor;
                default: string;
            };
            target: {
                type: import("vue").PropType<import("../../types/LinkTarget").default>;
                default: string;
            };
            to: {
                type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
                default: null;
            };
        }, {
            tag: import("vue").ComputedRef<string>;
            routerAttr: import("vue").ComputedRef<{
                to: import("vue-router").RouteLocationRaw;
                href: string;
                target: import("../../types/LinkTarget").default;
                rel: string | null;
                tabindex: unknown;
                'aria-disabled': string | null;
            }>;
            link: import("vue").Ref<HTMLElement>;
            clicked: (e: MouseEvent) => void;
            activeBoolean: import("vue").ComputedRef<boolean>;
            appendBoolean: import("vue").ComputedRef<boolean>;
            disabledBoolean: import("vue").ComputedRef<boolean>;
            replaceBoolean: import("vue").ComputedRef<boolean>;
            exactBoolean: import("vue").ComputedRef<boolean>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            active: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            activeClass: {
                type: StringConstructor;
                default: string;
            };
            append: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            disabled: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            event: {
                type: (StringConstructor | ArrayConstructor)[];
                default: string;
            };
            exact: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            exactActiveClass: {
                type: StringConstructor;
                default: string;
            };
            href: {
                type: StringConstructor;
            };
            rel: {
                type: StringConstructor;
                default: null;
            };
            replace: {
                type: import("vue").PropType<import("../../types/Booleanish").default>;
                default: boolean;
            };
            routerComponentName: {
                type: StringConstructor;
                default: string;
            };
            routerTag: {
                type: StringConstructor;
                default: string;
            };
            target: {
                type: import("vue").PropType<import("../../types/LinkTarget").default>;
                default: string;
            };
            to: {
                type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
                default: null;
            };
        }>> & {
            onClick?: ((...args: any[]) => any) | undefined;
        }, {
            replace: import("../../types/Booleanish").default;
            disabled: import("../../types/Booleanish").default;
            exact: import("../../types/Booleanish").default;
            active: import("../../types/Booleanish").default;
            activeClass: string;
            append: import("../../types/Booleanish").default;
            event: string | unknown[];
            exactActiveClass: string;
            rel: string;
            routerComponentName: string;
            routerTag: string;
            target: import("../../types/LinkTarget").default;
            to: import("vue-router").RouteLocationRaw;
        }>>;
        computedAriaCurrent: import("vue").ComputedRef<string | undefined>;
        clicked: (e: MouseEvent) => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        active: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        ariaCurrent: {
            type: StringConstructor;
            default: string;
        };
        disabled: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        text: {
            type: StringConstructor;
            required: false;
        };
        replace: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        exact: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        activeClass: {
            type: StringConstructor;
            default: string;
        };
        append: {
            type: import("vue").PropType<import("../../types/Booleanish").default>;
            default: boolean;
        };
        exactActiveClass: {
            type: StringConstructor;
            default: string;
        };
        href: {
            type: StringConstructor;
        };
        rel: {
            type: StringConstructor;
            default: null;
        };
        routerComponentName: {
            type: StringConstructor;
            default: string;
        };
        target: {
            type: import("vue").PropType<import("../../types/LinkTarget").default>;
            default: string;
        };
        to: {
            type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
            default: null;
        };
    }>> & {
        onClick?: ((...args: any[]) => any) | undefined;
    }, {
        replace: import("../../types/Booleanish").default;
        disabled: import("../../types/Booleanish").default;
        exact: import("../../types/Booleanish").default;
        active: import("../../types/Booleanish").default;
        activeClass: string;
        append: import("../../types/Booleanish").default;
        exactActiveClass: string;
        rel: string;
        routerComponentName: string;
        target: import("../../types/LinkTarget").default;
        to: import("vue-router").RouteLocationRaw;
        ariaCurrent: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    items: {
        type: ArrayConstructor;
        required: false;
    };
}>>, {}>;
export default _sfc_main;
